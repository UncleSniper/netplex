#ifndef NETPLEX_OPCODE_H
#define NETPLEX_OPCODE_H

typedef enum {
	NPLX_CLI_OPC_PING,
	NPLX_CLI_OPC_EXEC,
	NPLX_CLI_OPC_CONNECT,
	NPLX_CLI_OPC_DISCONNECT,
	NPLX_CLI_OPC_LISTEN,
	NPLX_CLI_OPC_SEND,
	NPLX_CLI_OPC_RECV,
	NPLX_CLI_OPC_WRITE,
	NPLX_CLI_OPC_CLOSE
} nplx_client_opcode_t;

typedef enum {
	NPLX_SVR_OPC_PONG,
	NPLX_SVR_OPC_EXEC_OK,
	NPLX_SVR_OPC_EXEC_FAILED,
	NPLX_SVR_OPC_CONNECT_OK,
	NPLX_SVR_OPC_CONNECT_FAILED,
	NPLX_SVR_OPC_DISCONNECT_OK,
	NPLX_SVR_OPC_DISCONNECT_FAILED,
	NPLX_SVR_OPC_LISTEN_OK,
	NPLX_SVR_OPC_LISTEN_FAILED,
	NPLX_SVR_OPC_SEND_OK,
	NPLX_SVR_OPC_SEND_FAILED,
	NPLX_SVR_OPC_RECV_OK,
	NPLX_SVR_OPC_RECV_FAILED,
	NPLX_SVR_OPC_WRITE_OK,
	NPLX_SVR_OPC_WRITE_FAILED,
	NPLX_SVR_OPC_CLOSE_OK,
	NPLX_SVR_OPC_CLOSE_FAILED,
	NPLX_SVR_OPC_READ_DATA,
	NPLX_SVR_OPC_READ_FAILED,
	NPLX_SVR_OPC_EXIT,
	NPLX_SVR_OPC_ACCEPT_CLIENT,
	NPLX_SVR_OPC_ACCEPT_FAILED
} nplx_server_opcode_t;

#endif /* NETPLEX_OPCODE_H */
